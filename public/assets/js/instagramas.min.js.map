{"version":3,"sources":["?","../src/instagramas.js"],"names":["exports","global","$w","window","$d","document","API_PREFIX","data","data-show-tags","attributeName","defaultValue","data-show-tags-count","data-show-likes","data-render-type","data-count","template","tag","loader","HTMLElement","_","c","o","i","length","createElement","new","e","cloneNode","isBoolean","b","valueOf","count","done","serialize","obj","prefix","str","p","hasOwnProperty","k","v","push","encodeURIComponent","join","load","url","script","src","async","onload","onreadystatechange","this","readyState","parentNode","removeChild","getElementsByTagName","appendChild","get","params","callback","query","fname","Date","response","Instagramas","element","$this","access_token","getAttribute","undefined","removeAttribute","children","childrenLoaded","member","source","className","innerHTML","setAttribute","create","prototype","childLoaded","ready","success","call","Instagrama","$data","$parent","parent","render","figure","tagscaption","likescaption","a","t","img","tags","likes","type","target","href","link","alt","caption","text","images","renderType","apply","arguments","showLikes","showTags","showTagsCount","replace","context","_r","f","test","setTimeout","instagramas","querySelectorAll","namespace","_instagramas_namespace","collection","start"],"mappings":"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","file":"instagramas.js","sourcesContent":[null,"/*!\n * Instagrams.js\n *\n * Renders latest instagramas\n */\n\n// (function($w, $d) {\n\n    var $w = window,\n        $d = document;\n\n    // 'use strict';\n\n    var API_PREFIX = 'https://api.instagram.com/v1/users/self/media/recent/?';\n\n    /**\n     * Default properties and values\n     * @private @const data\n     */\n    var data = {\n        'data-show-tags': {\n            attributeName: 'showTags',\n            defaultValue: false\n        },\n        'data-show-tags-count': {\n            attributeName: 'showTagsCount',\n            defaultValue: 1\n        },\n        'data-show-likes': {\n            attributeName: 'showLikes',\n            defaultValue: false\n        },\n        'data-render-type': {\n            attributeName: 'renderType',\n            defaultValue: 'thumbnail'\n        },\n        'data-count': {\n            attributeName: 'count',\n            defaultValue: 5\n        }\n    };\n\n    /**\n     * Templates map\n     * @private @const template\n     */\n    var template = {\n        'tag': '<span class=\"instagrama-tag\">{{tag}}</span>',\n        'loader': '<div class=\"spinner\"><div class=\"dot1\"></div><div class=\"dot2\"></div></div>'\n    };\n\n    /**\n     * DOM elements cache\n     * @private @const elements\n     */\n    var HTMLElement = {\n        _: (function(c) {\n            var o = {};\n            for (var i = 0; i < c.length; i += 1) {\n                o[c[i]] = $d.createElement(c[i]);\n            }\n            return o;\n        }(['div', 'figure', 'figcaption', 'img', 'a'])),\n        new: function(e) {\n            return HTMLElement._[e].cloneNode(false);\n        }\n    };\n\n    /**\n     * Returns if a variable is a boolean\n     * @private @function isBoolean\n     * @return {boolean} true if the passed variable is boolean\n     */\n    function isBoolean(b) {\n        return typeof b === 'boolean' || (typeof b === 'object' && typeof b.valueOf() === 'boolean');\n    }\n\n    var count = 0, done = 0;\n\n    function serialize(obj, prefix) {\n        var str = [];\n        for(var p in obj) {\n            if (obj.hasOwnProperty(p)) {\n                var k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n                str.push(typeof v == \"object\" ?\n                    serialize(v, k) :\n                    encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n            }\n        }\n        return str.join(\"&\");\n    }\n\n    function load(url) {\n        var script = document.createElement('script'),\n        done = 0;\n        script.src = url;\n        script.async = true;\n        script.onload = script.onreadystatechange = function() {\n            if (!done && (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\")) {\n                done = true;\n                script.onload = script.onreadystatechange = null;\n                if ( script && script.parentNode ) {\n                    script.parentNode.removeChild( script );\n                }\n            }\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n    }\n\n    function get(url, params, callback) {\n        var query = '';\n        if (typeof params === 'function' && typeof callback === 'undefined') {\n            callback = params;\n        } else {\n            query = serialize(params);\n        }\n        count += 1;\n        var fname = 'phealer' + '_' + new Date().valueOf() + count;\n        window[fname] = function (response) {\n            callback && callback(response);\n            try {\n                delete window[fname];\n            } catch (e) {}\n            window[fname] = null;\n        }\n        load(url + query + \"&amp;callback=\" + fname);\n    }\n\n    /**\n     * Creates a gallery of Instagramas using a valid Instagram access token\n     * @private @class Instagramas\n     * @param {HTMLElement} element - Placeholder element for Instagramas gallery\n     */\n    var Instagramas = function(element) {\n\n        var $this = this;\n        var access_token = element.getAttribute('data-access-token');\n\n        if (access_token === undefined || access_token === null) {\n            throw (\"Instagramas missing access token: Instagramas needs access token to fetch information from instragram.\");\n        } else {\n            element.removeAttribute('data-access-token');\n        }\n\n        $this.element = element;\n        $this.children = [];\n        $this.childrenLoaded = 1;\n\n        for (var member in data) {\n            $this[data[member].attributeName] = (isBoolean(data[member].defaultValue)) ?\n            element.getAttribute(member) === \"true\" || data[member].defaultValue :\n                element.getAttribute(member) || data[member].defaultValue;\n        }\n\n        var source = API_PREFIX + 'count=' + $this.count + '&amp;' + 'access_token=' + access_token;\n\n        $this.loader = HTMLElement.new('div');\n        // $this.loader = $d.createElement('div');\n        $this.loader.className = 'loader';\n        $this.loader.innerHTML = template.loader;\n        $this.element.appendChild($this.loader);\n        $this.element.setAttribute('data-state', 'initiated');\n\n        $this.get(source, $this.create);\n    };\n\n    /**\n     * @public @method childLoaded\n     * @return this\n     */\n    Instagramas.prototype.childLoaded = function() {\n        var $this = this;\n        if ($this.children.length === $this.childrenLoaded) {\n            $this.childrenLoaded = null;\n            delete $this.childrenLoaded;\n            return $this.ready();\n        }\n        $this.childrenLoaded += 1;\n        return $this;\n    };\n    /**\n     * @public @method ready\n     * @return this\n     */\n    Instagramas.prototype.ready = function() {\n        var $this = this;\n        $this.element.setAttribute('data-state', 'ready');\n        $this.element.removeChild($this.loader);\n        return $this;\n    };\n\n    /**\n     * Gets from the provided source though JSONP and executes the callback\n     * @public @method get\n     * @param {string} source - URL of the source of content\n     * @return {object} this\n     */\n    Instagramas.prototype.get = function(source, callback) {\n        var $this = this;\n        $this.element.setAttribute('data-state', 'get:in-progress');\n        // TODO: Handle error cases\n        function success(response) {\n            $this.element.setAttribute('data-state', 'get:success');\n            callback.call($this, response);\n        }\n        get(source, success);\n        return $this;\n    };\n\n    /**\n     * Creates the gallery content from the provided Instagram's API response.\n     * @public @method create\n     * @param {object} response - Instagram's API response object.\n     */\n    Instagramas.prototype.create = function(response) {\n        var $this = this;\n        var i;\n        if (!response.data) {\n            return;\n        }\n        for (i = 0; i < response.data.length; i += 1) {\n            $this.children.push(new Instagrama(response.data[i], $this));\n        }\n        $this.element.setAttribute('data-state', 'created');\n        return $this;\n    };\n\n    /**\n     * Creates a single Instagram picture\n     * @private @class Instagrama\n     * @param {object} $data - Object that describe a picture from Instragram's API Response.\n     * @return {object} $this - Instagrama instance\n     */\n    var Instagrama = function($data, $parent) {\n\n        if (!$data) {\n            return this;\n        }\n\n        var $this = this;\n        $this.parent = $parent;\n        $this.data = $data;\n        $this.render();\n\n        return $this;\n    };\n\n    /**\n     * Renders the content of the picture\n     * @public @method render\n     * @return {object} $this - Instagrama instance\n     */\n    Instagrama.prototype.render = function() {\n\n        var $this = this,\n            figure,\n            tagscaption,\n            likescaption,\n            a, i, t, img,\n            tags = '',\n            likes = 0;\n\n        figure = HTMLElement.new('figure');\n        figure.className = 'instagrama-' + $this.data.type;\n\n        // a = $d.createElement('a');\n        a = HTMLElement.new('a');\n        a.target = '_blank';\n        a.className = 'instagrama';\n        a.href = $this.data.link;\n        figure.appendChild(a);\n\n        img = HTMLElement.new('img');\n        img.alt = $this.data.caption.text;\n        img.src = $this.data.images[$this.parent.renderType].url;\n        img.onload = function() {\n            $this.parent.childLoaded.apply($this.parent, arguments);\n        };\n        a.appendChild(img);\n\n        // likes\n        if ($this.parent.showLikes) {\n            likescaption = HTMLElement.new('figcaption');\n            likescaption.className = 'instagrama-likes';\n            likescaption.innerHTML = $this.data.likes.count;\n            a.appendChild(likescaption);\n        }\n\n        // collect tags\n        if ($this.parent.showTags) {\n            t = $this.parent.showTagsCount || $this.data.tags.length;\n            for (i = 0; i < t; i += 1) {\n                if (!$this.data.tags[i]) {\n                    continue;\n                }\n                tags += template.tag.replace('{{tag}}', $this.data.tags[i]);\n            }\n            tagscaption = HTMLElement.new('figcaption');\n            tagscaption.className = 'instagrama-tags';\n            tagscaption.innerHTML = tags;\n            a.appendChild(tagscaption);\n        }\n\n        $this.parent.element.appendChild(figure);\n\n        return $this;\n    };\n\n    var context = this;\n    /**\n     * @param {function} f The function to execute when the DOM is ready\n     */\n    function _r(f) {\n        /in/.test(document.readyState)?\n            setTimeout(function() { _r.call(context, f) },9):\n            f.call(context)\n    }\n    /*\n    * @private\n    * Will find all instances of instagramas in the document\n    */\n    var instagramas = $d.querySelectorAll('.instagramas');\n    if (instagramas !== undefined || instagramas !== null) {\n        /**\n        * @private\n        * Instagramas namespace can be predefined by setting a string in the global\n        * variable `_instagramas_namespace` with the name of your choosing, otherwise\n        * will automatically use the defautl value `_Instagramas`.\n        */\n        var namespace = $w._instagramas_namespace || '_Instagramas';\n        $w._instagramas_namespace = namespace;\n\n        /**\n        * @public\n        * Define the namespace to store instagramas instances.\n        */\n        $w[namespace] = {\n            collection: []\n        };\n\n        /*\n        * Start, when DOM ready, create a Instagramas instance for each match.\n        */\n        _r(function start() {\n            for (var i = 0; i < instagramas.length; i += 1) {\n                $w[namespace].collection.push(new Instagramas(instagramas[i]));\n            }\n        });\n    }\n\n// }(window, document));"]}